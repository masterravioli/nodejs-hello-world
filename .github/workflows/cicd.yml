name: Build and Push Image

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  IMAGE_NAME: nodejs-hello-world
  RESOURCE_GROUP_NAME: devops-rg
  NSG_NAME: sonarqube-nsg
  NSG_RULE_NAME: AllowGitHub-${{ github.run_id }}
  ALLOW_PORTS: 8080

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
        
      - name: Azure Login
        id: azlogin
        uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZ_CLIENT_ID }}","clientSecret":"${{ secrets.AZ_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZ_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZ_TENANT_ID }}"}'

      - name: Allow Azure Connectivity from GitHub Runner
        id: allowconnectivity
        run: |
          RUNNER_IP=$(curl http://api.ipify.org)
          az network nsg rule create --name ${NSG_RULE_NAME} --nsg-name ${NSG_NAME} --priority 100 --resource-group ${RESOURCE_GROUP_NAME} --access Allow --destination-port-ranges ${ALLOW_PORTS} --direction Inbound --protocol Tcp --source-address-prefixes ${RUNNER_IP}/32 -o tsv
          sleep 120
   
      - name: Run SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v1.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          
      - name: Run SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         
      - name: Disable Azure Connectivity from GitHub Runner
        if: ${{ steps.allowconnectivity.conclusion == 'success' }}
        run: |
          # Check if NSG rule exists before attempting to delete the NSG rule
          nsg_rule_exists=$(az network nsg rule show --name $NSG_RULE_NAME --nsg-name $NSG_NAME --resource-group $RESOURCE_GROUP_NAME --query "name" --output tsv 2>/dev/null)
          
          if [[ -z $nsg_rule_exists ]]; then
            echo "NSG rule $NSG_RULE_NAME does not exist in NSG $NSG_NAME."
          else
            echo "NSG rule $NSG_RULE_NAME exists in NSG $NSG_NAME. Attempting to delete NSG rule..."
            
            # Delete NSG rule
            az network nsg rule delete --name $NSG_RULE_NAME --nsg-name $NSG_NAME --resource-group $RESOURCE_GROUP_NAME
            
            echo "NSG rule $NSG_RULE_NAME has been deleted from NSG $NSG_NAME."
          fi
      
      - name: Azure Logout
        if: ${{ steps.azlogin.conclusion == 'success' }}
        run: |
          az logout
          az cache purge
          az account clear

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME .

      - name: Tag Docker image
        run: |
          docker tag $IMAGE_NAME ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:${{ github.run_id }}
          docker tag $IMAGE_NAME ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:${{ github.run_id }}
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest
